# Generated by Django 5.1.6 on 2025-02-17 20:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AggregatedPickList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_route', models.CharField(max_length=100)),
                ('delivery_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=50)),
            ],
            options={
                'verbose_name': 'Aggregated Pick List',
                'verbose_name_plural': 'Aggregated Pick Lists',
            },
        ),
        migrations.CreateModel(
            name='CycleCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=50)),
            ],
            options={
                'verbose_name': 'Cycle Count',
                'verbose_name_plural': 'Cycle Counts',
            },
        ),
        migrations.CreateModel(
            name='ItemDiscount',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Discount Rate')),
                ('discount_rate_percent', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Discount Rate Percent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFixedAsset',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('acquired_as', models.CharField(max_length=255, verbose_name='Acquired As')),
                ('purchase_desc', models.TextField(verbose_name='Purchase Desc')),
                ('purchase_date', models.DateField(verbose_name='Purchase Date')),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Purchase Cost')),
                ('vendor_or_payee_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor Or Payee Name')),
                ('fixed_asset_sales_desc', models.TextField(verbose_name='Fixed Asset Sales Desc')),
                ('fixed_asset_sales_date', models.DateField(verbose_name='Fixed Asset Sales Date')),
                ('fixed_asset_sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Fixed Asset Sales Price')),
                ('fixed_asset_sales_expense', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Fixed Asset Sales Expense')),
                ('asset_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Asset Desc')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Location')),
                ('po_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='PO Number')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Serial Number')),
                ('warranty_exp_date', models.DateField(blank=True, null=True, verbose_name='Warranty Exp Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('asset_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Asset Number')),
                ('cost_basis', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Cost Basis')),
                ('year_end_accumulated_depreciation', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Year End Accumulated Depreciation')),
                ('year_end_book_value', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Year End Book Value')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
                ('is_print_items_in_group', models.BooleanField(blank=True, null=True, verbose_name='Is Print Items In Group')),
                ('special_item_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Special Item Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemInventory',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('manufacturer_part_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer Part Number')),
                ('sales_desc', models.TextField(blank=True, null=True, verbose_name='Sales Desc')),
                ('sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Price')),
                ('purchase_desc', models.TextField(blank=True, null=True, verbose_name='Purchase Desc')),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Purchase Cost')),
                ('purchase_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Purchase Tax Code Ref List ID')),
                ('purchase_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Purchase Tax Code Ref Full Name')),
                ('pref_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pref Vendor Ref List ID')),
                ('pref_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pref Vendor Ref Full Name')),
                ('reorder_point', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Reorder Point')),
                ('max_level', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Max Level')),
                ('quantity_on_hand', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Hand')),
                ('average_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Average Cost')),
                ('quantity_on_order', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Order')),
                ('quantity_on_sales_order', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Sales Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemInventoryAssembly',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('manufacturer_part_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer Part Number')),
                ('sales_desc', models.TextField(blank=True, null=True, verbose_name='Sales Desc')),
                ('sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Price')),
                ('purchase_desc', models.TextField(blank=True, null=True, verbose_name='Purchase Desc')),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Purchase Cost')),
                ('purchase_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Purchase Tax Code Ref List ID')),
                ('purchase_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Purchase Tax Code Ref Full Name')),
                ('pref_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pref Vendor Ref List ID')),
                ('pref_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pref Vendor Ref Full Name')),
                ('build_point', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Build Point')),
                ('max_level', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Max Level')),
                ('quantity_on_hand', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Hand')),
                ('average_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Average Cost')),
                ('quantity_on_order', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Order')),
                ('quantity_on_sales_order', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity On Sales Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemNonInventory',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('manufacturer_part_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer Part Number')),
                ('sales_or_purchase_choice', models.CharField(blank=True, choices=[('SalesOrPurchase', 'SalesOrPurchase'), ('SalesAndPurchase', 'SalesAndPurchase')], max_length=50, null=True)),
                ('sales_or_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales Or Purchase Desc')),
                ('sales_or_purchase_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price')),
                ('sales_or_purchase_price_percent', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price Percent')),
                ('sales_and_purchase_sales_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Sales Desc')),
                ('sales_and_purchase_sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Sales Price')),
                ('sales_and_purchase_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Purchase Desc')),
                ('sales_and_purchase_purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Purchase Cost')),
                ('sales_and_purchase_purchase_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref List ID')),
                ('sales_and_purchase_purchase_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref Full Name')),
                ('sales_and_purchase_pref_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref List ID')),
                ('sales_and_purchase_pref_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref Full Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemOtherCharge',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('special_item_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Special Item Type')),
                ('sales_or_purchase_choice', models.CharField(blank=True, choices=[('SalesOrPurchase', 'SalesOrPurchase'), ('SalesAndPurchase', 'SalesAndPurchase')], max_length=50, null=True)),
                ('sales_or_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales Or Purchase Desc')),
                ('sales_or_purchase_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price')),
                ('sales_or_purchase_price_percent', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price Percent')),
                ('sales_and_purchase_sales_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Sales Desc')),
                ('sales_and_purchase_sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Sales Price')),
                ('sales_and_purchase_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Purchase Desc')),
                ('sales_and_purchase_purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Purchase Cost')),
                ('sales_and_purchase_purchase_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref List ID')),
                ('sales_and_purchase_purchase_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref Full Name')),
                ('sales_and_purchase_pref_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref List ID')),
                ('sales_and_purchase_pref_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref Full Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPayment',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
                ('payment_method_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Method Ref List ID')),
                ('payment_method_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payment Method Ref Full Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemSalesTax',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
                ('tax_rate', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Tax Rate')),
                ('tax_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tax Vendor Ref List ID')),
                ('tax_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tax Vendor Ref Full Name')),
                ('sales_tax_return_line_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Return Line Ref List ID')),
                ('sales_tax_return_line_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Return Line Ref Full Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemSalesTaxGroup',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemService',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('sales_or_purchase_choice', models.CharField(blank=True, choices=[('SalesOrPurchase', 'SalesOrPurchase'), ('SalesAndPurchase', 'SalesAndPurchase')], max_length=50, null=True)),
                ('sales_or_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales Or Purchase Desc')),
                ('sales_or_purchase_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price')),
                ('sales_or_purchase_price_percent', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales Or Purchase Price Percent')),
                ('sales_and_purchase_sales_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Sales Desc')),
                ('sales_and_purchase_sales_price', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Sales Price')),
                ('sales_and_purchase_purchase_desc', models.TextField(blank=True, null=True, verbose_name='Sales And Purchase Purchase Desc')),
                ('sales_and_purchase_purchase_cost', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Sales And Purchase Purchase Cost')),
                ('sales_and_purchase_purchase_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref List ID')),
                ('sales_and_purchase_purchase_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Purchase Tax Code Ref Full Name')),
                ('sales_and_purchase_pref_vendor_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref List ID')),
                ('sales_and_purchase_pref_vendor_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales And Purchase Pref Vendor Ref Full Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemSubtotal',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('special_item_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Special Item Type')),
                ('item_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Desc')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reorder_point', models.IntegerField(default=0)),
                ('location', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=50, unique=True)),
                ('order_date', models.DateField()),
                ('expected_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(default='draft', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
            },
        ),
        migrations.CreateModel(
            name='StagingArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(default='active', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Staging Area',
                'verbose_name_plural': 'Staging Areas',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('list_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='List ID')),
                ('time_created', models.DateTimeField(blank=True, null=True, verbose_name='Time Created')),
                ('time_modified', models.DateTimeField(blank=True, null=True, verbose_name='Time Modified')),
                ('edit_sequence', models.CharField(max_length=255, verbose_name='Edit Sequence')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('bar_code_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bar Code Value')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='Is Active')),
                ('class_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref List ID')),
                ('class_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Class Ref Full Name')),
                ('parent_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref List ID')),
                ('parent_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Parent Ref Full Name')),
                ('sublevel', models.IntegerField(verbose_name='Sublevel')),
                ('unit_of_measure_set_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref List ID')),
                ('unit_of_measure_set_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit Of Measure Set Ref Full Name')),
                ('is_tax_included', models.BooleanField(blank=True, null=True, verbose_name='Is Tax Included')),
                ('sales_tax_code_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref List ID')),
                ('sales_tax_code_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sales Tax Code Ref Full Name')),
                ('external_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='External GUID')),
                ('item_type_qbxml', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Type QBXML')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
            },
        ),
        migrations.CreateModel(
            name='PickListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('pick_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.aggregatedpicklist')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
            ],
            options={
                'verbose_name': 'Pick List Item',
                'verbose_name_plural': 'Pick List Items',
            },
        ),
        migrations.CreateModel(
            name='ItemDataExtRet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Owner ID')),
                ('data_ext_name', models.CharField(max_length=255, verbose_name='Data Ext Name')),
                ('data_ext_type', models.CharField(max_length=255, verbose_name='Data Ext Type')),
                ('data_ext_value', models.TextField(verbose_name='Data Ext Value')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_ext_ret', to='warehouse.product', verbose_name='Item')),
            ],
        ),
        migrations.CreateModel(
            name='CycleCountItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.IntegerField()),
                ('counted_quantity', models.IntegerField(blank=True, null=True)),
                ('discrepancy_notes', models.TextField(blank=True)),
                ('actual_quantity', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cycle_count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.cyclecount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
            ],
            options={
                'verbose_name': 'Cycle Count Item',
                'verbose_name_plural': 'Cycle Count Items',
            },
        ),
        migrations.CreateModel(
            name='Backorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
            ],
            options={
                'verbose_name': 'Backorder',
                'verbose_name_plural': 'Backorders',
            },
        ),
        migrations.CreateModel(
            name='POItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='warehouse.purchaseorder')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
            },
        ),
        migrations.CreateModel(
            name='ReceiptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_date', models.DateTimeField(auto_now_add=True)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.purchaseorder')),
            ],
            options={
                'verbose_name': 'Receipt Log',
                'verbose_name_plural': 'Receipt Logs',
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.receiptlog')),
            ],
            options={
                'verbose_name': 'Receipt Item',
                'verbose_name_plural': 'Receipt Items',
            },
        ),
        migrations.CreateModel(
            name='StagedOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('staged_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='staged', max_length=50)),
                ('pick_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.aggregatedpicklist')),
                ('staging_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.stagingarea')),
            ],
            options={
                'verbose_name': 'Staged Order',
                'verbose_name_plural': 'Staged Orders',
            },
        ),
        migrations.CreateModel(
            name='VanInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
            ],
            options={
                'verbose_name': 'Van Inventory',
                'verbose_name_plural': 'Van Inventories',
            },
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.vendor'),
        ),
        migrations.CreateModel(
            name='ItemGroupLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_ref_list_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Ref List ID (Group Line)')),
                ('item_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Ref Full Name (Group Line)')),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity (Group Line)')),
                ('unit_of_measure', models.CharField(blank=True, max_length=255, null=True, verbose_name='Unit of Measure (Group Line)')),
                ('item_line_number', models.IntegerField(verbose_name='Item Line Number')),
                ('group_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_lines', to='warehouse.itemgroup', verbose_name='Group Item')),
            ],
            options={
                'unique_together': {('group_item', 'item_line_number')},
            },
        ),
        migrations.CreateModel(
            name='ItemInventoryAssemblyLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_inventory_ref_list_id', models.CharField(max_length=255, verbose_name='Item Inventory Ref List ID')),
                ('item_inventory_ref_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Inventory Ref Full Name')),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=19, null=True, verbose_name='Quantity')),
                ('item_line_number', models.IntegerField(verbose_name='Item Line Number')),
                ('quickbooks_sync_token', models.IntegerField(blank=True, null=True)),
                ('last_synced_datetime', models.DateTimeField(blank=True, null=True)),
                ('assembly_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assembly_lines', to='warehouse.iteminventoryassembly', verbose_name='Assembly Item')),
            ],
            options={
                'unique_together': {('assembly_item', 'item_line_number')},
            },
        ),
    ]
